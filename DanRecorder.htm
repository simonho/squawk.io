<!DOCTYPE html>
<html>
	<head>
		<title>Bootstrap 101 Template</title>
		<!-- Bootstrap -->
        <link href="Bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
        
	</head>
	<body>
		<div class="navbar navbar-inverse navbar-fixed-top">
			<div class="navbar-inner">
				<div class="container">
					<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </a>
					<a class="brand" href="#">Squawk.io getUserMedia demo</a>

				</div>
			</div>
		</div>

		<div class="container">

			<!-- Main hero unit for a primary marketing message or call to action -->
			<div class="hero-unit">
				<div  id = "replaceMe"  class="span2"></div>
				<br />
				<br />
				<br />
				<br />
				<br />
				<br />
				<br />
				<br />
			</div>

			<!-- Start recording button -->
			<div class="row">
				<div class="span12">
					<p>
						<button id="audio-record-btn" class="btn btn-large btn-block btn-success" type="button">
							Push and Hold to Record
						</button>
					</p>
				</div>
			</div>
			<!-- end recording button -->

			<hr>

			<footer>
				<p>
					&copy; Squawk.io 2012
				</p>
			</footer>

		</div>
		<!-- /container -->
		<script src="http://code.jquery.com/jquery-latest.js"></script>
        <script src="Bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
        <script src="Scripts/BufferLoader.js" type="text/javascript"></script>
        <script src="WebAudioRecorder/script/Lib/recorderjs/recorder.js" type="text/javascript"></script>
		<script>
		    $(document).ready(function () {
		        main(recordingControls);
		    });
		    function main(recordingControls) {

		        recordingControls();
		    }

		    function recordingControls() {
		        var intervalKey, rec, mediaStreamSource, audioContext;
		        var ws = new WebSocket("ws://127.0.0.1:9999");
		        ws.onopen = function () {
		            console.log("Openened connection to websocket");
		        };

		        ws.onmessage = function (e) {
		            /*var jsonResponse = jQuery.parseJSON(e.data);
		            console.log(jsonResponse);
		            if (jsonResponse.hypotheses.length > 0) {
		            var bestMatch = jsonResponse.hypotheses[0].utterance;
		            $("#outputText").text(bestMatch);
		            }
		            */
		        }
		        var recordButton = $('#audio-record-btn');
		        recordButton.mousedown(function () {
		            var self = $(this);
		            if (self.hasClass('btn-success')) {
		                self.removeClass('btn-success', (function () {
		                    self.addClass('btn-info');
		                    self.html('Recording Now, Release Mouse to Stop..');
		                })());
		            }
		            mediaStreamSource.connect(audioContext.destination);
		            rec.record();
		            ws.send("start");
		            ws.send(JSON.stringify({
		                user: 'one',
		                domain: 'two'
		            }));
		        });
		        recordButton.mouseup(function () {
		            var self = $(this);
		            if (self.hasClass('btn-info')) {
		                self.removeClass('btn-info', (function () {
		                    self.addClass('btn-success');
		                    self.html('Push and Hold to Record');
		                })());
		            }
		            mediaStreamSource.disconnect(audioContext.destination);
		            rec.exportWAV(function (blob) {
		                console.log(blob);
		                rec.clear();

		                ws.send(blob);
		                rec.stop();
		                ws.close();
		                //new playNewSounds();
		                (function () {
		                    ws = new WebSocket("ws://127.0.0.1:9999");
		                })();
		            });
		            play();
		        });
		        function gotStream(stream) {
		            audioContext = new webkitAudioContext();

		            // Create an AudioNode from the stream.
		            mediaStreamSource = audioContext.createMediaStreamSource(stream);
		            rec = new Recorder(mediaStreamSource);
		            // Connect it to the destination to hear yourself (or any other node for processing!)

		            //console.log( mediaStreamSource.connect);
		        }


		        navigator.webkitGetUserMedia({
		            audio: true
		        }, gotStream);
		        function play() {
		            $('#replaceMe').html('<p><button id="audio-play-btn" class="btn btn-large btn-block btn-primary" type="button"><i class ="icon-play icon-white"></i>Play Back</button></p>')
		            $('#audio-play-btn').click(function () {
		                var self = this;
		                this.context = new webkitAudioContext();
		                console.log('in playNewSounds');
		                function init() {

		                    bufferLoader = new BufferLoader(self.context, ['http://127.0.0.1:8020/squawk.io-node.js/tmp/audioDemoHtml5/one_two.wav'], finishedLoading);

		                    bufferLoader.load();

		                }

		                function finishedLoading(bufferList) {
		                    // Create two sources and play them both together.
		                    this.source = self.context.createBufferSource();
		                    //var source2 = context.createBufferSource();
		                    this.source.buffer = bufferList[0];
		                    //source2.buffer = bufferList[1];

		                    this.source.connect(self.context.destination);
		                    //source2.connect(context.destination);
		                    this.source.noteOn(0);
		                    //source2.noteOn(0);
		                }

		                setTimeout(init, 1000);
		            })
		        }

		    }
		</script>
	</body>
</html>
